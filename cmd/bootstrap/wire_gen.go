// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//+build !wireinject

package bootstrap

import (
	"context"
	"github.com/alvarocabanas/cart/internal/creator"
	"github.com/alvarocabanas/cart/internal/getter"
	"github.com/alvarocabanas/cart/internal/io/rest"
	"github.com/alvarocabanas/cart/internal/storage"
	"github.com/google/wire"
	"net/http"
)

// Injectors from wire.go:

func InitializeServer(ctx context.Context, cfg Config) (*http.Server, error) {
	address := getServerAddress(cfg)
	inMemoryCartRepository := storage.NewInMemoryCartRepository()
	inMemoryItemRepository := storage.NewInMemoryItemRepository()
	cartCreator := creator.NewCartCreator(inMemoryCartRepository, inMemoryItemRepository)
	cartGetter := getter.NewCartGetter(inMemoryCartRepository)
	cartHandler := rest.NewCartHandler(cartCreator, cartGetter)
	server := rest.NewServer(address, cartHandler)
	return server, nil
}

// wire.go:

// In future iterations the config will come from Environment variables
type Config struct {
	ServerPort string `mapstructure:"server_port"`
}

var appSet = wire.NewSet(getter.NewCartGetter, creator.NewCartCreator)

var storageSet = wire.NewSet(storage.NewInMemoryCartRepository, storage.NewInMemoryItemRepository)

var handlerSet = wire.NewSet(rest.NewCartHandler)

func getServerAddress(cfg Config) rest.Address {
	return rest.Address(cfg.ServerPort)
}
